# -*- coding: utf-8 -*-
"""PYTHON_4_STRING.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ZLTIrwdi8ODtjI_0h8gMZbpeqifiZte

**STRİNG**



```
Unutmayın, bir stringin numaralandırılması sıfırdan başlar .
Dize indekslemesinin formül sözdizimi şudur:string[start:stop:step] .

string[:]: dizinin tam kopyasını döndürür

string[start:]: öğeleri başlangıçtan bitiş öğesine kadar döndürür

string[:stop]: 1. öğeden stop-1'e kadar olan öğeyi döndürür

string[::step]: her bir öğeyi belirli bir adımla döndürür
```
"""

city = 'Phoenix'

print(city[1:])  # starts from index 1 to the end - dizin 1'den sonuna kadar başlar.
print(city[:6])  # starts from zero to 5th index - sıfırdan başlayarak 5. endekse kadar.
print(city[::2])  # starts from zero to end by 2 step - sıfırdan başlayıp 2 adımla sona erer.
print(city[1::2])  # starts from index 1 to the end by 2 step - dizin 1'den başlayıp 2 adımla sona erer.
print(city[-3:])  # starts from index -3 to the end - dizin -3'ten sonuna kadar başlar.
print(city[::-1])  # negative step starts from the end to zero- negatif adım sondan sıfıra doğru başlar.

# Aldığımız web sayfasının güvenli mi değil mi olduğunu öğreniyoruz.
url= 'https://www.youtube.com/'
guvenlimi =url [0:5]
print (guvenlimi[4] and 'güvenli' or 'güvenli değil')

#Indis (index) : Bir koleksiyonun (string,dizi,liste,tuple,...) elemanlarına erişimde kullanılır.
#degişken [indis no]
#fruit [5]:  fruit degişkeninin 5. elemanına erişim.

#Dilimleme (slicing) degişken [baslangıc-bitis] bitiş dahil değil.

fruit = 'Orange'

print('Word                   : ' , fruit)
print('First letter           : ' , fruit[0]) # fruit in 0. indisli elemanına erişim.
print('Second letter          : ' , fruit[1])
print("3rd to 5th letters     : " , fruit[2:5])
print("Letter all after 3rd   : " , fruit[2:])

#ders() fonksiyondur.
#print() fonksiyondur.
#input() fonksiyondur.
#fruit bir değişkendir.

#fruitin en son elemanına nasıl erişirim.
fruit = 'Orange'
print(fruit[-1]) # negatif indis.

#Bir stringi ters çevirmek için -1 step yapılır.
#[::-1]
fruit [::-1]

city [-5:-2]

city [-5:-7:-1] # Step değeri negatif ise ilerleme yönü sağdan sola doğrudur.

animal = 'hippopotamus'
print(animal [1:]) # 1 den sona doğru
print(animal [:6]) # Baştan 6.ya kadar git.
print(animal [::2]) # Baştan başla sona doğru git ama 2 şer 2 şer  git.
print(animal [1:7:2]) # 1 den başla 7 ye kadar 2 şer 2 şer git ama 7 i alma.
print(animal [-3:]) #
print(animal [::-1]) # Ters çevir.

vegatable = "Tomato"
print('length of the word',vegatable  , 'is :',len(vegatable))
#len() : Stringin/Koleksiyonun karakter sayısını verir.

vegatable [len(vegatable)-1] #En son elemana erişmek için.

"""**STRİNG FORMATLAMA İŞLEMİ**


```
+ : toplama/birleştirme işlemi için kullanılır.
= : atama operatörü (assing)
* : çarpma operatörü tekrarlama işlemi yapar.
```


"""

# + birleştirme işlemi yapar.
str_one = 'upper'
str_two = 'case'
str_comb = str_one + str_two
print('upper'+'case')
print(str_one + str_two)
print(str_comb)

str_one = 'upper'
str_two = 3 * 'upper' # '*' çarpma / çoğaltma işlemi yapar.
str_comb = str_one * 3
print(str_two)
print(str_comb)
print(*str_one) # aynadaki görüntüde (print) geçerli ayrıştırır ,filtreleme, seyrekleştirir yapar.

listem = [1,2,3,4]
print(listem)
print(*listem) # ayrıştırır sadece printte kullanılır.Virgülleri ortadan kaldırır.

string1 = 'I am angry...'
print(*string1) # ayrıştırır.

#stringler değiştirilemez (unmutable/immutable) veri yapılarıdır.
takim = 'Saray'
#Bu takımdaki 'a'ları 'e' yapın.
takim[2] = 'e'

#Listeler ise doğrudan değiştirilebilir. (mutable) veri yapılarıdır.
list_takim = ['S','a','r','a','y']

#bu takımdaki a ları e yapın.
list_takim[1] = 'e'

print(list_takim)

"""**STRING FORMATLAMA **


string.format()
"""

#
fruit = 'Orange'
vegetable = 'Tomato'
amount = 4
output = 'The amount of {} we bought is {} pounds'.format(fruit,amount)
print(output)

fruit = 'Orange'
vegetable = 'Tomato'
amount = 4
output = 'The amount of {1} we bought is {0} pounds'.format(fruit,amount)
print(output)

state = 'California'
country = 'USA'
adjective = 'crowded'

print(f'{state} is the most {adjective} state of the {country}') # Now use the print function.

# f-string ile yapma
state = 'California'
country = 'USA'
adjective = 'crowded'

print(f'{state} is the most {adjective} state of the {country}')

#Bugünkü tarihi girelim.
month = 12
day = 10
year = 2023
print('{0}/{1}/{2}'.format(day,month,year))

#Bugünkü tarih.
print('{0}/{1}/{2}'.format('27','12','2023'))

#Orijinal kodda 4 yer tutucu vardı ancak bunları doldurmak için yalnızca 2 değer vardı.
# pharse = '{} {} {} {}'.format('in all','wins')

#Bu düzeltilmiş sürüm 4 yer tutucu için 4 değer sağlar.
condition = 'circumstances'
morality = 'generosity'
pharse = '{} {} {} {}'.format('in all', condition, morality,'wins') # 4 yer tutucuyu doldurmak için 4 değer sağlama.
print (pharse)

# f-stringi ile işlem yapma.
sample = f'{2 ** 3}'
print(sample)

#output :'My name is Mariam'. Kelimenin ilk harfini büyük yazdırmak için kullanılır.
name = 'MARIAM'
print(f'My name is {name.capitalize()}')

#f-string ile örnek.
name = 'Joseph'
job = 'teachers'
domain = 'Data Science'
message =(
f'Hi {name}. '
f'You are one of the {job} '
f'in the {domain} section.')
print(message)

name = 'Susan'
age = 'young'
gender = 'lady'
scholl = 'AMANOS Universty'
output = f'{name} is a {age} {gender} and she is a student at {scholl}'
print(output)

#Clarusway - yeni bir text oluştur bunu clarusway e dönüştür. (n. karakteri kaldır)
#Clarusway - yeni bir text oluştur bunu clarusway e dönüştür. (n. karakteri kaldır)
text = 'clarusway'
n = 3
new_text = text[:n] + text[n+1:] #n+1 den sonrasını al diyoruz.
#text in n. karakterden öncesini al.
#3. karakterden sonrasıyla başla takla attırarak yaptırdık.
print(new_text) #öncesini ve sonrasını aldık ve birleştirdik.