# -*- coding: utf-8 -*-
"""Python5_STRING_METHODS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uJhLcAacMT0d2pNvhqJnXkV7EfMQL5M2
"""

#İç içe string kullanımında sınırlandırılma var mı ?
f"""{
    f'''{
        f"{f'{42}'}"
    }'''
}"""
#3.11 ve öncesi için en fazla 4 f-string kullanılabilir.

#Bir web adresinin uzantısını nasıl öğrenebiliriz.
url = 'https://www.clarusway.com/about/test.csv'
url[-3:]

#Basit bir hesap makinası.
num1 = int(input('Birinci sayı..: ')) #burada inputu int sarmalına aldık çünkü str+str de matematik işlemi olmaz bu yüzden 1 tanesi int olması gerekiyor.
num2 = int(input('İkinci sayı..: '))
print ('Toplamı..:',num1+num2)
print ('Farkı..:',num1-num2)
print ('Çarpımı..:',num1*num2)
print ('Bölümü..:',num1/num2)

#Basit bir hesap makinası.
# f string tüm bu işlemleri daha düzgün bir hale getirdi.Bir hesap makinası tasarımını yapmış olduk. iç içe f strimg örneği.
num1 = int(input('Birinci sayı..: ')) #burada inputu int sarmalına aldık çünkü str+str de matematik işlemi olmaz bu yüzden 1 tanesi int olması gerekiyor.
num2 = int(input('İkinci sayı..: '))
islem = ( f'Toplamı..:{num1+num2} /n '
          f'Farkı..:{num1-num2}/n'
          f'Çarpımı..:{num1*num2}/n'
          f'Bölümü..:{num1/num2}'
         )
print(islem)

"""STRING FORMATING :"""

# Commented out IPython magic to ensure Python compatibility.
"""Operatörün işlevi
# %d , %i :tam sayı (int)
# %f , % g :ondalıklı sayı (float)
# %s :string
"""
text = 'Bir dalda %d kuş, %s %s diye öter, durur.' % (3,'cik','cik') # Sıralama önemli.

'Hello, %s! You are %d years old.' % ('Jane',45)

name = 'Ali'
age = 20
'Hello, %s! You are %d years old.'(name,age)

text = 'Bir dalda {0} kuş, {1} {1} diye öter durur.'.format(3,'cik')
print (text)

adet = 3
ses = 'cik'
text = f"Bir dalda {adet} kuş, {adet} {ses} diye öter durur."
print(text)

adet = 3
ses = "cik"
text = f"Bir dalda {adet} kuş, {ses*2} diye öter durur."
print(text)

"""MAIN STRING OPERATIONS"""

var_str = 'Clarusway'
print (var_str.lower())
print (var_str.upper())
print (var_str.swapcase())
print (var_str.capitalize())
print (var_str.title())
#

#
var_str = 'Clarusway'
print (var_str.lower()) #Burada küçük harfe dönüştüğünü göreceksiniz.
print (var_str) #Burada orjinal halini göreceksiniz.Printli ifade ile kalıcı bir değişiklik olmaz.
var_str = 'Clarusway'.lower() #Burada kalıcı bir değişiklik oldu. Bir değişkene aktardığımız zaman değişken kalıcı hale gelir.
print (var_str)

#
dir(str)[33:]

text = 'In God we Trust'
text.lower() # Kalıcı değişiklik olması için.

#Text büyük harflerden mi oluşuyor ?
text = 'In God we Trust'
text.isupper()

text = 'ANNE'
text.isupper()

#STR data tipi (stringler) immutable (doğrudan değiştirilemez) özellikli veri yapısıdır.
data = 'Python' #Pithon olarak değiştirmek istiyoruz diyelim.
# Instead of trying to change the string directly, create a new string with the desired modification
data = data.replace('y', 'i')  # Replace 'y' with 'i'
print(data)

data = data.replace('Py','Pi')
print(data)

"""**STRING içerisinde arama :**"""

text = 'www.clarusway.com'
print(text.startswith('http:'))
print(text.endswith('.com'))

mail = "abigailadams@examplepetstore.com is my e-mail address"
print(mail.startswith("@", 9))  # 9.indisten itibaren bakıyor. 9. indis '@' simgesi ile mi başlıyoru sorguluyor.
print(mail.endswith("-", 10, 32)) # 10-32. indisle bu aralıkta (-) ile mi başlıyor.

# Bir kurumsal email adresinin geçerli olup olmadığını test etmek için.
mail = 'suemeyye@gmail.com'
print(mail.endswith('gmail.com'))

mail = 'suemeyye@gmail.com'
print(mail.startswith('suemeyye',0,10))

# Mail in içinde 'suemeyye@' geçiyor mu.
mail = 'suemeyye@gmail.com'
print('suemeyye@'in mail)

# Genel email adresinin geçerli olup olmadığını nasıl tespit ederiz.
mail = input('Mail adresiniz..:')
print(('@'and '.') in mail and 'Geçerli' or 'Geçersiz')

# if-else ile.
mail = input('Mail adresiniz..:')
if ('@'and '.') in mail:
    print('Geçerli')
else:
    print('Geçersiz')

True and 'Geçerli'or 'Geçersiz'

False and 'Geçerli'or 'Geçersiz'

'a' in 'clarusway' # a var mı içinde mi ?

'x' not in 'clarusway' # c yok mu içinde ?

'baba'.find('a') # a varsa indis nosunu döndürür.
#str.find(sub[, start[, end]])

mail = 'suemeyye@gmail.com'
print(mail.find('@')) # @ karakteri varsa indis numarasını döndürür.

mail = 'suemeyye@gmail.com'
print(mail.find('a')) # a karakteri varsa indis numarasını döndürür.

mail = 'suemeyye@gmail.com'
print(mail.find('j')) # j harfi yoksa -1 döndürür.

"baba".rfind('a') # sağdan aramaya başlıyor ve indis değerini veriyor.

'baba'.rindex('a') #sağdan arar varsa indisini yoksa -1 döndürür.

#Bir text içerisinde 'a'karakteri kaç kez geçmektedir.
text = 'babadağlar'
text.count('a')

cuemle = 'Ali ve Seda dün okula gelmedi ve neredeler bilmiyoruz'
print('ve bağlaç sayısı.. :',cuemle.count('ve'))

#Bir cümledeki kelime sayısını hesaplama.
cuemle = 'Ali ve Seda dün okula gelmedi ve neredeler bilmiyoruz'
print('kelime sayısı.. :',cuemle.count(' ')+1)

'1 2 3'.split() #stringi ayrıştırır listeye[] dönüştürür.

#tersi için
' '.join(['1','2','3']) # boşluklara göre yapması için.

#virgüllere göre ayrıştırır.
'1,2,3'.split(',')

listem = '1 2 3'.split() #stringleri ayrıştırır ve listeye dönüştürür.
print(listem)

"""**String üzerinde değişiklik :**"""

sentence = 'I live and work in Virginia'
print(sentence.upper()) # hepsini büyük harf yapar.
print(sentence.lower()) # hepsini küçük harf yapar.
print(sentence.swapcase()) # küçükler büyük, büyükler küçük olur (yer değiştirme).
print(sentence) # sentence'nin orjinal halini yazdır.

sentence = 'I live and work in Virginia'
title_sentence = sentence.title() # Her kelimenin baş harfini büyük yapar.
print(title_sentence)
changed_sentece = sentence.replace('i','+') # i lerin yerine + işareti koyuyor.
print(changed_sentece) # changed_sentence i leri + olarak gösteriyor.
print(sentence) # sentence'nin orjinal hali.

sentence = 'I live and work in Virginia'
print(sentence.title()) #  Her kelimenin ilk harfini büyük diğerlerini küçük harfe dönüştürür.
print(sentence.replace('i','+',3)) # ilk 3 'i' karakterini '+' ile yer değiştirir.
print(sentence) # orjinal halini verir.

sentence.upper().lower().swapcase() # Methodlar ard arda yazılabilir. Soldan-sağa doğru sıralı bir şekilde gider.Kalıcı bir değişiklik yapmaz print gibi.

sentence.capitalize().swapcase()

text = 'the better the family, the better the society'
print(text.title()) # Her kelimenin ilk harfini büyük harfe dönüştürür.
print(text.capitalize()) # cümlenin ilk harfini büyük harfe dönüştürür.

'STRAße'.lower() #harfleri küçüğe dönüştürüyor.

'STRAße'.casefold() #almanca harfini ss e dönüştürüyor yani küçük harfe dönüştüyor özellikle alman alfabesindeki harfi dönüştürür.

sentence = 'I live and work in Virginia'
swap_case = sentence.swapcase() #swap_case değişkenine sentence.swapcase yi atıyoruz ve kalıcı bir değişiklik olur.Orjinali korumak için kalıcı değişkenlikleri başka bir değişkene atayın.
print(swap_case) # swap_case ekrana yazılır.
print(swap_case.capitalize()) # swap_case nin ilk harfini büyük yaptık.

text = 'S0d0me and G0d0m' # Buradaki 0 ları  o ile değiştirmek için.
text = text.replace('0','o') # 0 lar o ya dönüşür.
print(text)

'Bochum'.replace('B','b') #büyük B küçük b olur.

'Galatasaray'.replace('a','e') # a lar e olur.

text = 'In God Weee Trust' # fazladan olan e yi nasıl düzeltiriz.
new_text = text.replace('ee','e') # yeni text olarak ee yi e ile değiştirir.
print(new_text) #istenilen çıktı.

text = 'In God Wee Trust'
new_text = text[:9] + text[10:] #9. indisten öncesini al sonra 10. indisten sonrasını al ve birleştir ve yeni text oluştur yine bir tane e kalır. replace kullanmadanda çözümü böyle olur.
print(new_text)



"""**Editing a String : Değişiklik**"""

#str.removeprefix(prefix,/)
#str.removesuffix(suffix,/)
#str.rstrip([chars])
#str.lstrip([chars])
#str.strip([chars])

space_string = "      listen first      "
space_string.strip() # Tırnak içerisindeki boşlukları kaldırır sağlı-sollu.

space_string = "      listen first      "
space_string.lstrip() #Soldaki boşlukarı kaldırmak için.

space_string = "      listen first      "
space_string.rstrip() #sağdaki boşlukları kaldırmak için.

source_string = "interoperability"
print(source_string.rstrip("yt")) # sağdan yt i kaldır.
print(source_string.lstrip("in")) # soldan in i kaldır.
print(source_string.strip("yi")) # en baştaki i yi ve en sondaki y i kaldırır.

'Monty Python'.strip() # boşluğa göre ayırır.

'Monty Python'.rstrip(' Python') #

'Monty Python'.removesuffix(' Python') # sadece bu kalıbı kaldırır, kombinasyonları kaldırmaz.

'TestHookTest'.removeprefix('Test')

'TestHookTest'.removesuffix('Test')

'TestHookTest'.lstrip('Text')

text = 'tyou can learn almost everything in pre-classz'
temiz_text = text.strip("tz").upper() #t-z yi kaldır.
print(temiz_text)

text = 'tyou can learn almost everything in pre-classz'
temiz_text = text.rstrip('z').lstrip('t').upper() #z ve t yi kaldır.
print(temiz_text)